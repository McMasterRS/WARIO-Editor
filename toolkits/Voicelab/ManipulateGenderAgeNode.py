from pipeline.Node import Node
from parselmouth.praat import call
from toolkits.Voicelab.VoicelabNode import VoicelabNode

###################################################################################################
# MANIPULATE FORMANTS NODE
# WARIO pipeline node for manipulating the gender and age of a voice
###################################################################################################
# ARGUMENTS
# 'voice'   : sound file generated by parselmouth praat
###################################################################################################
# RETURNS
###################################################################################################

class ManipulateGenderAgeNode(VoicelabNode):

    ###############################################################################################
    # process: WARIO hook called once for each voice file.
    ###############################################################################################

    def process(self):

        sound = self.args['voice']

        call(sound, "Scale intensity", 70)
        pitch = call(sound, "To Pitch", 0.0, 60, 500)
        meanF0 = call(pitch, "Get mean", 0, 0, "Hertz")

        if meanF0 > 159:
            gender = "female"
        else:
            gender = "male"

        if gender == "female":
            male = call(sound, "Change gender", 60, 500, 0.8, 100, 1, 1)
            female = call(sound, "Change gender", 60, 500, 1, 220, 1, 1)
            child = call(sound, "Change gender", 60, 500, 1.5, 350, 1, 1)
            
        elif gender == "male":
            male = call(sound, "Change gender", 60, 500, 1, 100, 1, 1)
            female = call(sound, "Change gender", 60, 500, 1.2, 220, 1, 1)
            child = call(sound, "Change gender", 60, 500, 1.6, 350, 1, 1)

        return {
            'male_voice': male,
            'female_voice': female,
            'child_voice': child
        }
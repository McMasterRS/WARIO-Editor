from pipeline.Node import Node
import numpy as np
import seaborn as sns
import parselmouth
from parselmouth.praat import call
import matplotlib.pyplot as plt

from toolkits.Voicelab.VoicelabNode import VoicelabNode


###################################################################################################
# VISUALIZE FORMANT NODE
# WARIO pipeline node for visualizing using a plot the formants of a voice.
###################################################################################################
# ARGUMENTS
# 'voice'   : sound file generated by parselmouth praat
###################################################################################################
# RETURNS
###################################################################################################

class VisualizeFormantNode(VoicelabNode):
    def process(self):
        'generate a new axis for these formants and plot them to a new or provided grid'

        formants = self.args['formants']
        intensity = self.args['intensity']
        figure, host = (self.args['figure'], self.args['host']) if ('figure' in self.args and 'host' in self.args) else plt.subplots()
        # axis = host.twinx()
        sample_times = formants.xs()

        for i in range(0, 4):  # How many formants do you want?
            formant_values = call(formants, "To Matrix", i + 1).values[0, :]
            for j, time in enumerate(sample_times):
                intensity_value = call(intensity, "Get value at time", time, "cubic")
                if intensity_value < 50:
                    formant_values[j] = 0

            formant_values[formant_values == 0] = np.nan
            host.scatter(sample_times, formant_values, c='w', linewidth=3, marker='o', s=1)
            host.scatter(sample_times, formant_values, c='r', linewidth=1, s=1)
            host.grid(False)
        return {
            'figure': figure,
            'host': host,
            # 'axis': axis,
            'formants': formants
        }
from pipeline.Node import Node
from parselmouth.praat import call
from toolkits.Voicelab.VoicelabNode import VoicelabNode

###################################################################################################
# MANIPULATE FORMANTS NODE
# WARIO pipeline node for manipulating voice formants.
###################################################################################################
# ARGUMENTS
# 'voice'   : sound file generated by parselmouth praat
# 'unit'    : 
# 'factor'  :
###################################################################################################
# RETURNS
# 'manipulated_voice'   : sound file of the original voice with modifications
###################################################################################################

class ManipulateFormantsNode(VoicelabNode):

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        # initialize with default arguments
        self.args = {
            'unit': "percent",
            'factor': 0.85
        }

    ###############################################################################################
    # process: WARIO hook called once for each voice file.
    ###############################################################################################
    def process(self):
        sound = self.args['voice']
        unit = self.args['unit']
        factor = self.args['factor']

        factor_percent = round(factor*100)
        f0min, f0max = self.pitch_bounds(sound)
        
        manipulated_sound = call(sound, "Change gender", f0min, f0max, factor, 0, 1, 1)
        manipulated_sound.scale_intensity(70)

        return {
            'voice': manipulated_sound
        }
